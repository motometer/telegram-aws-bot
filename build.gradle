plugins {
	id 'java'
	id 'maven'
}

group 'org.motometer.telegram'
version '0.0.1-SNAPSHOT'

sourceCompatibility = 11

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

sourceSets {
	integrationTest {
		compileClasspath += main.output + main.compileClasspath
		compileClasspath += test.output + test.compileClasspath
		runtimeClasspath += main.runtimeClasspath + test.runtimeClasspath
	}
}

configurations {
	integrationTestCompile.extendsFrom testCompile
	integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
	implementation 'com.amazonaws:aws-lambda-java-core:1.2.0'
	implementation 'com.amazonaws:aws-lambda-java-events:2.2.6'
	implementation 'ch.qos.logback:logback-classic:1.2.3'

	compileOnly 'org.projectlombok:lombok:1.18.10'
	annotationProcessor 'org.projectlombok:lombok:1.18.10'

	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
	testImplementation 'org.assertj:assertj-core:3.13.2'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
}

test {
	useJUnitPlatform()
}

task integrationTest(type: Test) {
	group 'verification'
	description 'Runs the integration tests.'
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
	outputs.upToDateWhen { false }
	mustRunAfter test
	useJUnitPlatform()
}

check.dependsOn integrationTest

task buildZip(type: Zip) {
	from compileJava
	from processResources
	into('lib') {
		from configurations.runtimeClasspath
	}
}

build.dependsOn buildZip
